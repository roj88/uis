# Author: Roland Carter
# HW3
# Date: 2020-07-17
set.seed(123)
# 1. Load Auto.cvs data set. This is the dataset you used in Homework 1.
df.auto <- read.csv("~/Downloads/Auto.csv")
# 2. Horsepower has missing values. Convert horsepower to int and replace the missing values with
# the mean (rounded to int) of horsepower.
df.auto$horsepower <- ifelse(is.na(df.auto$horsepower), round(mean(as.numeric(df.auto$horsepower), na.rm = TRUE), 0), df.auto$horsepower)
df.auto$horsepower <- as.numeric(df.auto$horsepower)
# 3. Use the lm() function to perform a multiple linear regression with mpg as the response variable
# and all other variables except name as predictors.
pred <- lm(data=subset(df.auto, select = -c(name)), mpg ~ .)
# 4. Which predictors appear to have a statistically significant relationship to the response?
pred
summary(pred)
# 5. What does the coefficient for the year variable suggest?
# 6. Write down the linear regression equation for the model.
pred
# 7. Using the linear regression model, what would be the predicted value for mpg for a car with the
# following features:
-0.493*4 + 0.020*100 - 0.017*50 - 0.006*3000 - 0.081*15 + 0.751*75 + 1.426*1 - 17.218435
# 8. Fit a C5.0 tree to the training data, with origin as the response variable and all the other
# variables except name as predictors. Use a random sample of 300 rows as training set, and the
# remaining 97 rows as testing set.
# import library
library(C50)
set.seed(123)
# randomize data
rows <- sample(nrow(df.auto))
df.auto.random <- df.auto[rows, ]
# get sample
sample_size <- 300
# split data to get test data
training_data <- sample(seq_len(nrow(df.auto.random)), size = sample_size)
# subset data
train.df.auto.random <- subset(df.auto.random[training_data, ], select=-c(name))
test.df.auto.random <- subset(df.auto.random[-training_data, ], select=-c(name))
# train model
model <- C5.0(subset(train.df.auto.random, select=-c(origin)), as.factor(train.df.auto.random$origin))
summary(model)
model
# 9. What is the decision tree size?
model
# 10. Draw a confusion matrix and calculate the error rate.
# test model
pred <- predict(model, subset(test.df.auto.random, select=-c(origin)))
#import gmodels
library(gmodels)
#run cross table
CrossTable(as.factor(test.df.auto.random$origin), pred,
prop.chisq = FALSE, prop.c = FALSE, prop.r = FALSE,
dnn = c('actual', 'predicted'))
# 11. Using the decision tree, what is the precited value of origin for the following car:
mpg <- 23
cylinders <- 4
displacement <- 100
horsepower <- 50
weight <- 3000
acceleration <- 15
year <- 75
pr_df <- data.frame(mpg, cylinders, displacement, horsepower, weight, acceleration, year)
p <- predict(model, pr_df)
p
savehistory("script.Rhistory")
